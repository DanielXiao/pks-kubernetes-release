---
apiVersion: v1
kind: Pod
metadata:
  name: core-dns-<%=spec.id %>
  namespace: kube-system
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: "CoreDNS"
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
spec:
  priorityClassName: system-cluster-critical # Added for Guaranteed Scheduling
  # serviceAccountName: coredns
  automountServiceAccountToken: false
  tolerations:
    - key: "CriticalAddonsOnly"
      operator: "Exists"
  containers:
  - name: coredns
    image: vmware.io/coredns:v1.6.2_vmware.2
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        memory: 170Mi
      requests:
        cpu: 100m
        memory: 70Mi
    args: [ "-conf", "/etc/coredns/Corefile" ]
    volumeMounts:
    - name: config-volume
      mountPath: /etc/coredns/Corefile
      readOnly: true
    - name: client-ca-crt
      mountPath: /var/run/kubernetes/client-ca.crt
    - name: client-crt
      mountPath: /var/run/kubernetes/client.crt
    - name: client-key
      mountPath: /var/run/kubernetes/client.key
    ports:
    - containerPort: 53
      name: dns
      protocol: UDP
    - containerPort: 53
      name: dns-tcp
      protocol: TCP
    - containerPort: 9153
      name: metrics
      protocol: TCP
    # NOTE: Security Context is denied unless privileged containers
    # are enabled. Once security context can be separated from
    # allow-privileged in the release, then this should become
    # conditional.
    # securityContext:
    #   allowPrivilegeEscalation: false
    #   capabilities:
    #     add:
    #     - NET_BIND_SERVICE
    #     drop:
    #     - all
    #   readOnlyRootFilesystem: true
    livenessProbe:
      httpGet:
        path: /health
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 60
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
  dnsPolicy: Default
  volumes:
    - name: config-volume
      hostPath:
        path: /var/vcap/jobs/kubelet/config/static/Corefile
        type: File
    - name: client-ca-crt
      hostPath:
        path: /var/vcap/jobs/kubelet/config/static/coredns.ca
        type: File
    - name: client-crt
      hostPath:
        path: /var/vcap/jobs/kubelet/config/static/coredns.cert
        type: File
    - name: client-key
      hostPath:
        path: /var/vcap/jobs/kubelet/config/static/coredns.key
        type: File
#      configMap:
#        name: coredns
#        items:
#        - key: Corefile.erb
#          path: Corefiles
